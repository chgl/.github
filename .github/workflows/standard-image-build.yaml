name: Standard workflow for building a container image from a Dockerfile

permissions:
  contents: read

defaults:
  run:
    shell: bash

on:
  workflow_call:
    inputs:
      image:
        description: "Name of the image to build and push, including its registry but excluding any tags"
        required: false
        default: "ghcr.io/${{ github.repository }}"
        type: string
    secrets:
      semantic-release-token:
        description: "The PAT used by the semantic release action"
        required: true
      github-token:
        description: "The GitHub workflow token used to push to ghcr.io. Also used by MegaLinter"
        required: true

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    name: build image
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    outputs:
      image-tags: ${{ steps.image_meta.outputs.tags }}
      image-version: ${{ steps.image_meta.outputs.version }}
      image-digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          # via <https://stackoverflow.com/questions/74744498/github-pushing-to-protected-branches-with-fine-grained-token/76550826#76550826>
          persist-credentials: false

      - name: Container image meta
        id: image_meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 # v4
        with:
          images: |
            ${{ inputs.image }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.github-token }}

      - name: Build and push image
        id: build
        uses: docker/build-push-action@1104d471370f9806843c095c1db02b5a90c5f8b6 # v3
        with:
          # when in a PR, load the image into the local docker daemon
          # this way, we can save it as an artifact in later steps
          load: ${{ github.event_name == 'pull_request' }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.image_meta.outputs.tags }}
          labels: ${{ steps.image_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Save container image as tar archive
        if: ${{ github.event_name == 'pull_request' }}
        env:
          IMAGE: ${{ fromJson(steps.image_meta.outputs.json).tags[0] }}
        run: |
          docker save "$IMAGE" -o /tmp/image.tar

      - name: Upload container image
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: container-image
          path: |
            /tmp/image.tar

      - name: Save Trivy vulnerability attestation
        uses: aquasecurity/trivy-action@e5f43133f6e8736992c9f3c1b3296e24b37e17f2 # 0.10.0
        with:
          image-ref: ${{ fromJson(steps.image_meta.outputs.json).tags[0] }}
          exit-code: "0"
          format: cosign-vuln
          output: trivy-vuln-attestation.json
          timeout: 15m

      - name: Upload image vulnerability attestation
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: image-trivy-vuln-attestation
          path: |
            trivy-vuln-attestation.json

  release:
    needs: build
    name: release
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      pull-requests: write
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          # via <https://stackoverflow.com/questions/74744498/github-pushing-to-protected-branches-with-fine-grained-token/76550826#76550826>
          persist-credentials: false

      # Only required temporary: https://github.com/cycjimmy/semantic-release-action/issues/159
      - uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1
        with:
          node-version: 14

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@8e58d20d0f6c8773181f43eb74d6a05e3099571d # v3.4.2
        with:
          extra_plugins: |
            conventional-changelog-conventionalcommits@5.0.0
            semantic-release-replace-plugin@1.2.0
            @semantic-release/git@10.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.semantic-release-token }}

  image-provenance:
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs:
      - build
    permissions:
      actions: read # for detecting the Github Actions environment.
      id-token: write
      packages: write # for uploading attestations.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v1.9.0
    with:
      image: ${{ inputs.image }}
      digest: ${{ needs.build.outputs.image-digest }}
      registry-username: ${{ github.actor }}
    secrets:
      registry-password: ${{ secrets.github-token }}

  sign-image:
    name: sign image
    runs-on: ubuntu-22.04
    if: ${{ github.event_name != 'pull_request' }}
    needs:
      - build
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.github-token }}

      - name: Download attestations
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: image-trivy-vuln-attestation
          path: /tmp

      - name: Install Cosign
        uses: sigstore/cosign-installer@11086d25041f77fe8fe7b9ea4e48e3b9192b8f19 # v3.1.2

      # via <https://github.com/actions/starter-workflows/blob/main/ci/docker-publish.yml>
      - name: Sign image
        env:
          # <https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable>
          TAGS: ${{ needs.build.outputs.image-tags }}
          DIGEST: ${{ needs.build.outputs.image-digest }}
        run: |
          echo "${TAGS}" | xargs -I {} cosign sign --yes {}@"${DIGEST}"

      - name: Attest image vulnerability report
        env:
          IMAGE: "${{ inputs.image }}@${{ needs.build.outputs.image-digest }}"
        run: |
          echo "Attest vulnerability report for '$IMAGE' using keyless approach"
          cosign attest --yes --type vuln --predicate /tmp/trivy-vuln-attestation.json "$IMAGE"

  megalinter:
    name: MegaLinter
    runs-on: ubuntu-22.04
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

      # MegaLinter
      - name: MegaLinter
        id: ml
        # You can override MegaLinter flavor used to have faster performances
        # More info at https://megalinter.io/latest/flavors/
        uses: oxsecurity/megalinter@a87b2872713c6bdde46d2473c5d7ed23e5752dc2 # v7.4.0
        env:
          VALIDATE_ALL_CODEBASE: "true"
          GITHUB_TOKEN: ${{ secrets.github-token }}

      # Upload MegaLinter artifacts
      - name: Archive production artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: MegaLinter reports
          path: |
            megalinter-reports
            mega-linter.log

  dependency-review:
    name: dependency review
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - name: Checkout Code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

      - name: Dependency Review
        uses: actions/dependency-review-action@6c5ccdad469c9f8a2996bfecaec55a631a347034 # v3.1.0
