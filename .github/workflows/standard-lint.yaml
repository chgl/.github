name: Standard workflow for linting

permissions:
  contents: read

defaults:
  run:
    shell: bash

env:
  # renovate: datasource=pypi depName=zizmor
  ZIZMOR_VERSION: 1.6.0

on:
  workflow_call:
    inputs:
      enable-codeql:
        description: "Enable CodeQL analysis"
        required: false
        default: true
        type: boolean
      codeql-languages:
        description: "Languages to run CodeQL analysis for. CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]"
        required: false
        default: '["java", "csharp", "python"]'
        type: string
      enable-validate-gradle-wrapper:
        description: "Enable Gradle wrapper validation"
        required: false
        default: true
        type: boolean
      enable-verify-base-image-signature:
        description: "Enable Dockerfile base image validation"
        required: false
        default: true
        type: boolean
      verify-base-image-certificate-oidc-issuer:
        description: "The OIDC issuer for the cosign base image signature"
        required: false
        default: "https://accounts.google.com"
        type: string
      verify-base-image-certificate-identity:
        description: "The certificate identity for the cosign base image signature"
        required: false
        default: "keyless@distroless.iam.gserviceaccount.com"
        type: string
      java-version:
        description: "The Java version to use by the CodeQL action"
        required: false
        default: "21"
        type: string
      dotnet-version:
        description: "The .NET version to use by the CodeQL action"
        required: false
        default: "9.0.x"
        type: string
    secrets:
      github-token:
        description: "The GitHub workflow token used to push to ghcr.io. Also used by MegaLinter"
        required: true

jobs:
  megalinter:
    name: MegaLinter
    runs-on: ubuntu-24.04
    if: ${{ github.event_name == 'pull_request' }}
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit # change to 'egress-policy: block' after couple of runs

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      # MegaLinter
      - name: MegaLinter
        id: ml
        # You can override MegaLinter flavor used to have faster performances
        # More info at https://megalinter.io/latest/flavors/
        uses: oxsecurity/megalinter@04cf22b980c2e9c2121553417ed651c944afc8e1 # v8.6.0
        env:
          VALIDATE_ALL_CODEBASE: "true"
          # only try to post PR comments if it's not a fork
          GITHUB_COMMENT_REPORTER: ${{ !github.event.pull_request.head.repo.fork }}
          GITHUB_TOKEN: ${{ secrets.github-token }}
          SARIF_REPORTER: "true"

      # Upload MegaLinter artifacts
      - name: Archive production artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: MegaLinter reports
          path: |
            megalinter-reports
            mega-linter.log

      - name: Upload MegaLinter scan results to GitHub Security tab
        if: ${{ always() }}
        uses: github/codeql-action/upload-sarif@28deaeda66b76a05916b6923827895f2b14ab387 # v3.28.16
        with:
          sarif_file: "megalinter-reports/megalinter-report.sarif"

  dependency-review:
    name: dependency review
    runs-on: ubuntu-24.04
    # can only run on PRs or the error is:
    # "Both a base ref and head ref must be provided, either via the `base_ref`/`head_ref` config options, or by running a `pull_request`/`pull_request_target` workflow."
    if: ${{ github.event_name == 'pull_request' }}
    permissions:
      contents: read
    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Dependency Review
        uses: actions/dependency-review-action@ce3cf9537a52e8119d91fd484ab5b8a807627bf8 # v4.6.0

  gradle-wrapper-validation:
    name: validate gradle wrapper
    runs-on: ubuntu-24.04
    if: ${{ inputs.enable-validate-gradle-wrapper }}
    permissions:
      contents: read
    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@06832c7b30a0129d7fb559bcc6e43d26f6374244 # v4.3.1

  base-image-signature-verification:
    name: verify Dockerfile base image signature
    runs-on: ubuntu-24.04
    if: ${{ inputs.enable-verify-base-image-signature }}
    permissions:
      contents: read
    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 1
          persist-credentials: false
      - name: Install Cosign
        uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2
      - run: |
          cosign dockerfile verify \
            --output text \
            --base-image-only \
            --certificate-oidc-issuer "${OIDC_ISSUER}" \
            --certificate-identity "${CERTIFICATE_IDENTITY}" \
            Dockerfile
        env:
          OIDC_ISSUER: ${{ inputs.verify-base-image-certificate-oidc-issuer }}
          CERTIFICATE_IDENTITY: ${{ inputs.verify-base-image-certificate-identity }}

  codeql-analyze:
    name: CodeQL analyze
    runs-on: ubuntu-24.04
    if: ${{ inputs.enable-codeql }}
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ${{ fromJSON(inputs.codeql-languages) }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Set up Java
        if: ${{ matrix.language == 'java' }}
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          java-version: ${{ inputs.java-version }}
          distribution: "temurin"
          cache: gradle

      - name: Set up .NET
        if: ${{ matrix.language == 'csharp' }}
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@28deaeda66b76a05916b6923827895f2b14ab387 # v3.28.16
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.

          # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          queries: +security-extended,security-and-quality

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@28deaeda66b76a05916b6923827895f2b14ab387 # v3.28.16

      # ℹ️ Command-line programs to run using the OS shell.
      # 📚 See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

      #   If the Autobuild fails above, remove it and uncomment the following three lines.
      #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

      # - run: |
      #   echo "Run, Build Application using script"
      #   ./location_of_script_within_repo/buildscript.sh

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@28deaeda66b76a05916b6923827895f2b14ab387 # v3.28.16
        with:
          category: "/language:${{matrix.language}}"

  zizmor:
    name: zizmor scan
    runs-on: ubuntu-24.04
    if: ${{ github.event_name == 'pull_request' }}
    permissions:
      security-events: write
      contents: read
      actions: read
    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@d4b2f3b6ecc6e67c4457f6d3e41ec42d3d0fcb86 # v5.4.2
        with:
          enable-cache: false

      - name: Run zizmor (sarif)
        run: |
          uvx "zizmor@${ZIZMOR_VERSION}" --pedantic --format sarif . > results.sarif
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@28deaeda66b76a05916b6923827895f2b14ab387 # v3.28.16
        with:
          sarif_file: results.sarif
          category: zizmor

      - name: Run zizmor (fail on findings)
        run: |
          uvx "zizmor@${ZIZMOR_VERSION}" --verbose --pedantic --format plain .
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
